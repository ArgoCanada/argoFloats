% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get.R
\name{getProfiles}
\alias{getProfiles}
\title{Get Profiles Named in an argoFloats Index}
\usage{
getProfiles(
  index,
  destdir = NULL,
  force = FALSE,
  retries = 3,
  skip = TRUE,
  quiet = FALSE,
  debug = 0
)
}
\arguments{
\item{index}{an \code{\linkS4class{argoFloats}} object of type \code{"index"}, as created
by \code{\link[=getIndex]{getIndex()}}.}

\item{destdir}{character value naming the directory into which to store the
downloaded Argo files, or \code{NULL} (the default) to use the value of
\code{destdir} that was provided in the \code{\link[=getIndex]{getIndex()}} call that created \code{index}.}

\item{force}{a logical value that indicates whether to force a file
download, even if the destination file already exists.}

\item{retries}{integer telling how many times to retry a download,
if the first attempt fails.}

\item{skip}{A logical value indicating whether to skip over netcdf
files that cannot be downloaded from the server.  This is \code{TRUE} by
default, to allow \code{\link[=getProfiles]{getProfiles()}} to handle out-of-date indices
without stopping when it tries to download netcdf files that are no
longer available.}

\item{quiet}{logical value, passed to \code{\link[curl:curl_download]{curl::curl_download()}},
that indicates whether to download silently.  Since some downloads
can be slow, the default value is \code{quiet=FALSE}.}

\item{debug}{integer value indicating level of debugging. If this
is less than 1, no debugging is done. Otherwise, some functions
will print debugging information.  If a function call fails, the
first step should be to rerun the function with \code{debug=1},
to see if the output suggests a problem in the call.}
}
\value{
An object of class \code{\linkS4class{argoFloats}} with type=\code{"profiles"}, which
is suitable as the first argument of \code{\link[=readProfiles]{readProfiles()}}.
}
\description{
This takes an index constructed with \code{\link[=getIndex]{getIndex()}}, possibly
after focusing with \code{\link[=subset,argoFloats-method]{subset,argoFloats-method()}}, and creates
a list of files to download from the server named in the index.
Then these files are downloaded to the \code{destdir} directory,
using filenames inferred from the source filenames. The
value returned by \code{\link[=getProfiles]{getProfiles()}} is suitable for use
by \code{\link[=readProfiles]{readProfiles()}}, and an example of this is given
in the documentation for \code{\link[=readProfiles]{readProfiles()}}.
}
\details{
It should be noted that the constructed server URL follows
a different pattern on the usgodae an ifremer servers, and
so if some other server is used, the URL may be wrong, leading
to an error.  Similarly, if the patterns on these two
servers change, then \code{\link[=getProfiles]{getProfiles()}} will fail. Users who
encounter such problems are requested to report them
to the authors; in a pinch, they may try altering the
conditional block that follows the line\preformatted{## NB. the USGODAE and IFREMER servers are set up differently.
}

in the source-code file named \code{R/get.R}.

If the data file cannot be downloaded after multiple trials, an
error is issued, with a hint that running \code{\link[=getIndex]{getIndex()}} again
might help, in case the filename on the server has changed since
the index was last downloaded by \code{\link[=getIndex]{getIndex()}}.
}
\examples{
# Download some Argo data files.
\dontrun{
library(argoFloats)
data(index)
index2 <- subset(index, 1:2)
profiles2 <- getProfiles(index2)
# See ?readProfiles for how to read the files now downloaded.
}

}
\author{
Dan Kelley
}
