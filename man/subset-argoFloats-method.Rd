% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClass.R
\name{subset,argoFloats-method}
\alias{subset,argoFloats-method}
\title{Subset an argoFloats Object}
\usage{
\S4method{subset}{argoFloats}(x, subset = NULL, ...)
}
\arguments{
\item{x}{an \linkS4class{argoFloats} object as created by \code{\link[=getIndex]{getIndex()}}.}

\item{subset}{optional numerical or logical vector that indicates which
indices of \code{x@data$index} to keep.  See example 1.}

\item{...}{a list named \code{circle}, \code{rectangle}, \code{parameter}, \code{polygon} , or \code{time}. See \dQuote{Details}
and Example 2.}
}
\value{
An \linkS4class{argoFloats} object.
}
\description{
Isolate a subset of an \linkS4class{argoFloats} object of type \code{"index"},
as created by \code{\link[=getIndex]{getIndex()}}, either by specifying
indices to keep (using the \code{subset} argument) or by specifying
a way to determine those indices (using the \code{...} argument).
}
\details{
The possibilities for the \code{...} argument are as follows.
\enumerate{
\item A list named \code{circle} with elements named \code{longitude},
\code{latitude} and \code{radius}.  The first two give the center of
the subset region, and the third gives the radius of
that region, in kilometers.
\item A list named \code{rectangle}, which has an element named \code{longitude}
with two elements giving the western and eastern limits of the
subset region, and similar one named \code{latitude} giving the southern
and northern limits.
\item A list named \code{parameter}, which has \code{argo}, \code{argo_bgc}, or \code{argo_merge}
parameter elements indicating the parameter of interest.
\item A list named \code{polygon} that has elements named \code{longitude} and \code{latitude}.
Profiles within this polygon will be retained.
\item A list named \code{time} that has elements \code{from} and \code{to} that are POSIXt
times created with eg. \code{\link[=POSIXct]{POSIXct()}}, with \code{tz="UTC"} to match
the timezone used in Argo data. Profiles within that time frame will
be retained.
\item A list named \code{institution}, which has \code{argo}, \code{argo_bgc}, or \code{argo_merge}
institutions (ie. \code{AO} \code{BO} \code{CS} \code{HZ} \code{IF} \code{IN} \code{JA} \code{KM} \code{KO} \code{ME} \code{NM}).
}

In all cases, the notation is that longitude is positive
for degrees East and negative for degrees West, and that latitude
is positive for degrees North and negative for degrees South.
}
\examples{
library(argoFloats)
data(index)

# Example 1: First three profiles in dataset.
index3 <- subset(index, 1:3)
cat("First 3 longitudes:", paste(index3[["longitude"]]), "\n")
# Example 2: Subsets near Abaca Island
# 2A: circle around the island
indexC <- subset(index, circle=list(longitude=-77.06, latitude=26.54, radius=200))
cat("Found", length(indexC[["longitude"]]), "profiles in circle around Abaca Island\n")
# 2B: rectangle to northeast of the island
indexR <- subset(index, rectangle=list(longitude=c(-77,-76), latitude=c(27,28)))
cat("Found", length(indexR[["longitude"]]), "profiles in rectangle north of Abaca Island\n")
# Show these subsets on a map
library(oce)
data(coastlineWorldFine, package="ocedata")
par(mar=c(2, 2, 1, 1))
plot(coastlineWorldFine, col="tan",
     longitudelim=-77.06+c(-3, 3), latitudelim=26.54+c(-2, 2))
points(indexC[["longitude"]], indexC[["latitude"]], col="red")
points(indexR[["longitude"]], indexR[["latitude"]], col="blue", pch=20)
# 2C: Polygon to the northeast of the Abaco island
\dontrun{
library(oce)
library(sp)
data(package='ocedata')
data('coastlineWorldFine', package='ocedata')
latitudePolygon <- c(24, 27, 24) # Creating a polygon that closes
longitudePolygon <- c(-79, -78, -74 )
mapPlot(coastlineWorldFine, col='lightgray', longitudelim=c(-83,-71),
        latitudelim=c(20,30), projection="+proj=merc", grid=TRUE)
mapPoints(longitudePolygon, latitudePolygon, type="l", lwd=5, col="blue")
abacaSub <- subset(index, circle=list(longitude=-77.15, latitude=26.35,
                   radius=300))
latitudePoint <- abacaSub[['latitude']]
longitudePoint <- abacaSub[['longitude']]
indexP <- subset(index, polygon=list(latitude=latitudePolygon,
                 longitude=longitudePolygon))
inside <- sp::point.in.polygon(longitudePoint, latitudePoint,
                               longitudePolygon, latitudePolygon)
mapPoints(longitudePoint, latitudePoint, col=inside+1, pch=20) }
# Example 3: Subsetting argo_merge data containing 'DOXY' parameters
# 3A: Data containing all 'DOXY' parameters (single or full word)
ai <- getIndex(file='merge', destdir='~/data/argo')
summary(ai)
aiDoxy <- subset(ai, parameter="DOXY")
summary(aiDoxy)
# 3B: Data containing strictly 'DOXY' parameters (single word)
\dontrun{
ai <- getIndex(file='merge', destdir='~/data/argo')
subDoxy <- subset(ai, parameter='\\\\bDOXY\\\\b')
summary(subDoxy)}
# Example 4: Subsetting data for the year 2019
\dontrun{
ai <- getIndex(file='merge', destdir ='~/data/argo')
summary(ai)
from <- as.POSIXct("2019-01-01", tz="UTC")
to <- as.POSIXct("2019-12-31", tz="UTC")
ait <- subset(ai, time=list(from=from, to=to))
summary(ait) 
# Example 5: Subsetting by institution
ai <- getIndex(file='merge', destdir="~/data/argo")
summary (ai)
aiAO <- subset(ai, institution="AO")
summary(aiAO)
}
}
\author{
Dan Kelley and Jaimie Harbin
}
