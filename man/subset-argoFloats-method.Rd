% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subset.R
\name{subset,argoFloats-method}
\alias{subset,argoFloats-method}
\title{Subset an argoFloats Object}
\usage{
\S4method{subset}{argoFloats}(x, subset = NULL, ...)
}
\arguments{
\item{x}{an \linkS4class{argoFloats} object as created by \code{\link[=getIndex]{getIndex()}}.}

\item{subset}{optional numerical or logical vector that indicates which
indices of \code{x@data$index} to keep (example 1).}

\item{...}{the first entry here must be either (a)
a list named \code{circle}, \code{rectangle}, \code{polygon},
\code{parameter}, \code{time}, \code{institution}, or \code{id}
(examples 2 through 8)
or (b) a logical value named \code{deep} (example 9).  Optionally, this entry
may be followed by second entry named \code{silent}, which is a logical
value indicating whether to prevent the printing of messages that
indicate the number (and percentage) of data that are kept
during the subsetting operation.
See \dQuote{Details} and \dQuote{Examples}.}
}
\value{
An \linkS4class{argoFloats} object.
}
\description{
Isolate a subset of an \linkS4class{argoFloats} object of type \code{"index"},
as created by \code{\link[=getIndex]{getIndex()}}, either by specifying
indices to keep (using the \code{subset} argument) or by specifying
a way to determine those indices (using the \code{...} argument).
Note that only one subset condition may be given in the \code{...}
argument, but that \code{\link[=merge,argoFloats-method]{merge,argoFloats-method()}} can be used to merge indices
created by \code{subset}, which effectively creates a logical "or"
operation.
}
\details{
The possibilities for the \code{...} argument are as follows.
\enumerate{
\item An integer vector giving indices to keep. See example 1.
\item A list named \code{circle} with numeric elements named \code{longitude},
\code{latitude} and \code{radius}.  The first two give the center of
the subset region, and the third gives the radius of
that region, in kilometers. See example 2.
\item A list named \code{rectangle}, which has elements named
\code{longitude} and \code{latitude}, two-element numeric vectors
giving the western and eastern, and southern and northern
limits of the selection region. See example 3.
\item A list named \code{polygon} that has elements named \code{longitude} and \code{latitude}
that are numeric vectors specifying a polygon within which profiles
will be retained. If the polygon is not closed (i.e. if the first and
last points do not coincide) then a warning is issued, and the first
point is pasted onto the end.  See example 4.
\item A vector or list named \code{parameter} that holds character values that
specify the names of measured parameters to keep. See example 5.
\item A list named \code{time} that has elements \code{from} and \code{to} that are POSIXt
times that were created with eg. \code{\link[=POSIXct]{POSIXct()}}, with \code{tz="UTC"} to match
the timezone used in Argo data. Profiles within that time frame will
be retained. See example 6.
\item A list named \code{institution}, which holds a single character element that
names the institution.  The permitted values are:
\code{"AO"} for AOML, USA;
\code{"BO"} for BODC, United Kingdom;
\code{"CS"} for CSIRO, Australia;
\code{"HZ"} for CSIO, China Second Institute of Oceanography;
\code{"IF"} for Ifremer, France;
\code{"IN"} for INCOIS, India;
\code{"JA"} for JMA, Japan;
\code{"KM"} for KMA, Korea;
\code{"KO"} for KORDI, Korea;
\code{"ME"} for MEDS, Canada; and
\code{"NM"} for NMDIS, China.
See example 7.
\item A list named \code{deep} that holds a logical value indicating weather argo floats
are deep argo (i.e. \code{profiler_type} 849, 862, and 864). See example 8.
\item A list named \code{ID} that holds a character value specifying a float identifier.
See example 9.
}

In all cases, the notation is that longitude is positive
for degrees East and negative for degrees West, and that latitude
is positive for degrees North and negative for degrees South.
}
\examples{
library(argoFloats)
data(index)

# Example 1: subset to the first 3 profiles in the (built-in) index
index1 <- subset(index, 1:3)
cat("First 3 longitudes:", paste(index1[["longitude"]]), "\n")

# Example 2: subset to a circle near Abaca Island
index2 <- subset(index, circle=list(longitude=-77.5, latitude=27.5, radius=50))

# Example 3: subset to a rectangle near Abaca Island
lonRect <- c(-76.5, -76)
latRect <- c(26.5, 27.5)
index3 <- subset(index, rectangle=list(longitude=lonRect, latitude=latRect))

# Example 4: subset to a polygon to near Abaco Island
lonPoly <- c(-76.5, -76.0, -75.5)
latPoly <- c(25.5, 26.5, 25.5)
index4 <- subset(index, polygon=list(longitude=lonPoly, latitude=latPoly))

# Show some of these subsets on a map
plot(index)
col <- c("#DF536B", "#61D04F", "#2297E6") # col=2:4 in R-4.x
points(index2[["longitude"]], index2[["latitude"]], col=col[1], pch=20, cex=1.4)
points(index3[["longitude"]], index3[["latitude"]], col=col[2], pch=20, cex=1.4)
rect(lonRect[1], latRect[1], lonRect[2], latRect[2], border=col[2], lwd=2)
points(index4[["longitude"]], index4[["latitude"]], col=col[3], pch=20, cex=1.4)
polygon(lonPoly, latPoly, border=col[3], lwd=2)

# Example 5: subset argo_merge data containing 'DOXY' parameters
# Data containing 'DOXY' data
data(indexMerged)
index5A <- subset(indexMerged, parameter="DOXY")
# Data containing both 'PSAL' and 'DOWN_IRRADIANCE380' data
data(indexMerged)
index5B <- subset(indexMerged, parameter=c("PSAL", "DOWN_IRRADIANCE380"))

# Example 6: subset data for the year 2019
data(index)
from <- as.POSIXct("2019-01-01", tz="UTC")
to <- as.POSIXct("2019-12-31", tz="UTC")
index6 <- subset(index, time=list(from=from, to=to))

# Example 7: subset to the Canadian MEDS data
index7 <- subset(index, institution="ME")

# Example 8: subset to a specific ID
\dontrun{
ai <- getIndex(file='merged', destdir = '~/data/argo')
index9 <- subset(ai, ID='1900722') }

# Example 9: subset data to only include deep argo
\dontrun{
ai <- getIndex(file='merged', destdir = '~/data/argo')
index8 <- subset(ai, deep=TRUE) }

}
\author{
Dan Kelley and Jaimie Harbin
}
