% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClass.R
\name{subset,argoFloats-method}
\alias{subset,argoFloats-method}
\title{Subset an argoFloats Object}
\usage{
\S4method{subset}{argoFloats}(x, subset = NULL, ...)
}
\arguments{
\item{x}{an \linkS4class{argoFloats} object as created by \code{\link[=getIndex]{getIndex()}}.}

\item{subset}{optional numerical or logical vector that indicates which
indices of \code{x@data$index} to keep.  See example 1.}

\item{...}{a list named \code{circle} or \code{rectangle}. See \dQuote{Details}
and Examples 2 and 3.}
}
\value{
An \linkS4class{argoFloats} object.
}
\description{
Isolate a subset of an \linkS4class{argoFloats} object of type \code{"index"},
as created by \code{\link[=getIndex]{getIndex()}}, either by specifying
indices to keep (using the \code{subset} argument) or by specifying
a way to determine those indices (using the \code{...} argument).
}
\details{
The possibilities for the \code{...} argument are as follows.
\enumerate{
\item A list named \code{circle} with elements named \code{longitude},
\code{latitude} and \code{radius}.  The first two give the center of
the subset region, and the third gives the radius of
that region, in kilometers.
\item A list named \code{rectangle}, which has an element named \code{longitude}
with two elements giving the western and eastern limits of the
subset region, and similar one named \code{latitude} giving the southern
and northern limits.
}

In both cases, the notation is that longitude is positive
for degrees East and negative for degrees West, and that latitude
is positive for degrees North and negative for degrees South.
}
\examples{
library(argoFloats)
\dontrun{
ai <- getIndex(file="argo_bio-profile_index.txt.gz", destdir="~/data/argo")
# Example 1: First three profiles in dataset.
aiFirstThree <- subset(ai, 1:3)
cat("First three longitudes:", paste(aiFirstThree[["longitude"]]), "\n")

# Example 2: Profiles within 200km of Sable Island
aiSable <- subset(ai, circle=list(longitude=-59.915, latitude=44.934, radius=200))
cat("Found", length(aiSable[["longitude"]]), "profiles near Sable Island\n")

# Example 3: Profiles in a given rectangle
library(oce)
data(coastlineWorldFine, package="ocedata")
aiRect <- subset(ai, rectangle=list(longitude=c(-65,-64), latitude=c(40,45)))
lat <- aiRect[['latitude']]
lon <- aiRect[['longitude']]
latlim <- c(40,43)
lonlim<- c(-70,-64)
mapPlot(coastlineWorldFine, col='lightgray', longitudelim=lonlim, latitudelim=latlim,
        projection="+proj=merc", grid=2)
mapPoints(lon,lat)
}

}
\author{
Dan Kelley and Jaimie Harbin
}
