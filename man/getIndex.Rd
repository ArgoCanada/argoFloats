% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/download.R
\name{getIndex}
\alias{getIndex}
\title{Get an Index of Available Argo Float Profiles}
\usage{
getIndex(
  server = "ftp://usgodae.org/pub/outgoing/argo",
  file = "ar_index_global_prof.txt.gz",
  destdir = ".",
  age = 7,
  quiet = FALSE,
  debug = 0
)
}
\arguments{
\item{server}{character value giving the base name of the server, used in the
construction of URL queries. Since servers tend to change over time, this
is a good argument to check, when debugging code that once worked but
now fails.}

\item{file}{character value indicating the file on the server, also
used as a pattern for the name of a constructed \code{.rda} file that
is placed in the \code{destdir} directory.
For the \verb{ftp://usgodae.org/pub/outgoing/argo} server,
two of multiple choices for \code{file} are
\code{ar_index_global_prof.txt.gz}
(which is the default for this function) and
\code{argo_bio-profile_index.txt.gz}
but examination of the server will reveal other possibilities
that might be worth exploring.}

\item{destdir}{character value indicating the directory in which to store
downloaded files. The default value of \code{"."} means to store the
downloaded file in the present working directory.  Set \code{destdir=NULL}
if \code{destfile} is a filename with full path information.
File clutter is reduced by creating a top-level directory called
\code{data}, with subdirectories for various file types; see
\dQuote{Examples}.}

\item{age}{numeric value indicating how old a downloaded file
must be (in days), for it to be considered out-of-date.  The
default, \code{age=7}, limits downloads to once per week, as a way
to avoid slowing down a workflow with a download that might take
a sizable fraction of an hour. Set \code{age=0} to force a download,
regardless of the file age.}

\item{quiet}{silence some progress indicators.  The default
is to show such indicators.}

\item{debug}{integer value indicating level of debugging. If this
is less than 1, no debugging is done. Otherwise, some functions
will print debugging information.  If a function call fails, the
first step should be to rerun the function with \code{debug=1},
to see if the output suggests a problem in the call.}
}
\value{
An object of class \code{argoFloats} with type=\code{"index"}.
}
\description{
This function gets an index of available Argo float profiles, either by
by downloading information from a data repository or by reusing an index
(stored as an \code{.rda} file) that was prepared by a recent call to the function.
}
\details{
The first step is to construct a URL for downloading, based on the
\code{url} and \code{file} arguments. That URL will be a string ending in \code{.gz},
and from this the name of a local file is constructed by changing the
suffix to \code{.rda} and prepending the file directory specified by
\code{destdir}.  If an \code{.rda} file of that name already exists, and is less
than \code{age} days old, then no downloading takes place. This caching
procedure is a way to save time, because the download can take from a
minute to an hour, depending on the bandwidth of the connection to the
server.

The resultant \code{.rda} file, which is named in the return value of this
function, holds a list named \code{index} that holds following elements:
\itemize{
\item \code{ftpRoot}, the FTP root stored in the header of the source \code{file}
(see next paragraph).
\item \code{server}, the argument provided here.
\item \code{file}, the argument provided here.
\item \code{header}, the preliminary lines in the source file that start
with the \verb{#} character.
\item \code{data}, a data frame containing the items in the source file.
This has columns named \code{file}, \code{date}, \code{longitude}, \code{latitude},
\code{ocean}, \code{profiler_type}, \code{institution}, and \code{date_update}.
}

Note that \code{paste0(argoIndex$ftpRoot, argoIndex$data$file)} will
form a vector of names of files that can be downloaded en-mass
with \code{\link[=getProfiles]{getProfiles()}} or individually with \code{\link[=getProfileFromUrl]{getProfileFromUrl()}},
after which the profiles may be read with \code{\link[oce:read.oce]{oce::read.oce()}}
(or \code{\link[oce:read.argo]{oce::read.argo()}}), plotted with \code{\link[oce:plot,argo-method]{oce::plot,argo-method()}},
etc.
}
\examples{
\dontrun{
library(argoFloats)
library(oce)
# Example: Temporal and spatial coverage of BIO-Argo floats.
par(mfrow=c(2, 1), mar=c(3, 3, 1, 1))
ai <- getIndex(file="argo_bio-profile_index.txt.gz", destdir="~/data/argo")
summary(ai)
hist(ai[["date"]], breaks="years", main="", xlab="Time", freq=TRUE)
data(coastlineWorld)
par(mar=rep(0.5, 4))
mapPlot(coastlineWorld, col="gray")
mapPoints(ai[["longitude"]], ai[["latitude"]], pch=".", col="blue")
}

}
\author{
Dan Kelley
}
