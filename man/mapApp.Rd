% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapApp.R
\name{mapApp}
\alias{mapApp}
\title{Interactive app for viewing Argo float positions}
\usage{
mapApp(age = 7, destdir = ".")
}
\arguments{
\item{age}{numeric value indicating the age beyond which the argo
index will be re-acquired with \code{\link[=getIndex]{getIndex()}}.}

\item{destdir}{character value indicating the directory into which to store the argo
index acquired with \code{\link[=getIndex]{getIndex()}}.}
}
\description{
The GUI permits specifying a spatial-temporal region of interest, a set
of float types to show, etc.  The interface ought to be reasonably
straightforward, especially for those who take a moment to click on the
Help button and to read the popup window that it creates.
}
\details{
This app will use \code{\link[=getIndex]{getIndex()}} to download index files from the Argo server
the first time it runs, this make take up to a minute or so.  Then it will combine
information from the core-Argo and bgc-Argo index tables, cross-indexing so
it can determine the Argo type for each profile (or cycle).  The results of
this combination are stored in a local file named \code{argo.rda}, which is then
used for the functioning of the app.  In the interest of speed, a check is
made on start up for the existence of this file, and it will be reused if it
is less than 7 days old.

The \code{hi-res} button will only affect the coastline, not the topography,
unless there is a local file named \code{topoWorldFine.rda} that contains
an alternative topographic information. Here is how to create such a file:\if{html}{\out{<div class="R">}}\preformatted{library(oce)
topoFile <- download.topo(west=-180, east=180,
                          south=-90, north=90,
                          resolution=10,
                          format="netcdf", destdir=".")
topoWorldFine <- read.topo(topoFile)
save(topoWorldFine, file="topoWorldFine.rda")
unlink(topoFile) # clean up
}\if{html}{\out{</div>}}
}
\examples{
\dontrun{
library(argoFloats)
mapApp()}

}
\author{
Dan Kelley
}
