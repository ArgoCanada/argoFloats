% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read.R
\name{readProfiles}
\alias{readProfiles}
\title{Read argo profiles from local files}
\usage{
readProfiles(profiles, handleFlags = TRUE, silent = FALSE, debug = 0)
}
\arguments{
\item{profiles}{either a character vector holding the names
of local files to read, or (better) an \code{\linkS4class{argoFloats}} object created
by \code{\link[=getProfiles]{getProfiles()}}.}

\item{handleFlags}{a logical value (with default \code{TRUE}) that
indicates whether to call \code{\link[oce:handleFlags]{oce::handleFlags()}} on the individual argo
files that are to be read. This cleans up some common errors
that are identified in the quality-control analysis that is usually
done before data are place on the argo servers.}

\item{silent}{logical value (with \code{FALSE} as the default value),
indicating whether to silence messages and warnings. The value of
\code{silent} is ignored if \code{debug} is \code{TRUE}.}

\item{debug}{an integer specifying the level of debugging. If
this is zero, the work proceeds silently. If it is 1,
a small amount of debugging information is printed.  Note that
\code{debug-1} is passed to \code{\link[oce:read.argo]{oce::read.argo()}}, which actually reads
the file, and so it will print messages if \code{debug} exceeds 1.}
}
\value{
\link{readProfiles} returns an \code{\linkS4class{argoFloats}} object
with \code{type="argos"}, in which the \code{data} slot
contains a list named \code{argos} that holds objects
that are created by \code{\link[oce:read.argo]{oce::read.argo()}}.
}
\description{
This works with either a list of local (netCDF) files,
or a \code{\linkS4class{argoFloats}} object of type \code{"profiles"}, as
created by \code{\link[=getProfiles]{getProfiles()}}.  By default, warnings are issued about any
profiles in which 50 percent or more of the measurements are flagged
with a quality-control code of 4 (which designates bad data),
and these values are set to \code{NA}; use the \code{silent} and \code{handleFlags}
arguments to control this behaviour.
}
\examples{
# Download and plot some profiles.
\dontrun{
library(argoFloats)
data(index)
index1 <- subset(index, 1)
profiles <- getProfiles(index1)
argosWithNA<- readProfiles(profiles, handleFlags=TRUE)
argosWithoutNA <- readProfiles(profiles, handleFlags=FALSE)
par(mfrow=c(1, 2))
file <- gsub(".*/", "",  profiles[[1]])
aWithNA <- argosWithNA[[1]]
plotTS(aWithNA, eos="unesco", type="o")
mtext(paste(file, "\n handling flags"), cex=0.7*par("cex"))
aWithoutNA <- argosWithoutNA[[1]]
plotTS(aWithoutNA, eos="unesco", type="o")
mtext(paste(file, "\n ignoring flags"), cex=0.7*par("cex"))
}

}
\author{
Dan Kelley
}
